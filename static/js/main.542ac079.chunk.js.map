{"version":3,"sources":["gif/spinner.gif","gif/landingPage.gif","actions/reposActions.js","actions/types.js","components/SearchBar.js","components/Spinner.js","components/LandingPage.js","components/GithubRepo.js","components/AccountDetail.js","reducers/reposReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fetchRepos","currentPage","query","dispatch","fetch","then","res","json","data","type","payload","console","log","SearchBar","props","state","timeout","handleChange","bind","handleSubmit","e","preventDefault","this","fetchQuery","target","value","setLoading","searchText","clearTimeout","setTimeout","Fragment","style","display","onSubmit","name","placeholder","flex","padding","search","onChange","autoComplete","className","Component","protoTypes","PropTypes","func","isRequired","connect","repos","Spinner","src","spinner","width","margin","alt","LandingPage","landingPage","Accounts","React","lazy","ResultNotFound","GithubRepo","totalCount","loading","totalPages","activePage","setState","updateTotalCount","pageNumber","setCurrentPage","content","miliseconds","Math","round","performance","getEntries","duration","length","map","index","key","header","pagination","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","fallback","prototypes","array","items","AccountDetail","user","userData","params","match","owner","detail","to","avatar_url","login","bio","location","following","followers","onClick","window","open","html_url","detailView","storeDetail","findUser","initialState","combineReducers","action","total_count","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.542ac079.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.bd0201f1.gif\";","module.exports = __webpack_public_path__ + \"static/media/landingPage.df0ef832.gif\";","import { FETCH_REPOS, FETCH_QUERY, STORE_DETAIL, FIND_USER, LOADING, UPDATE_TOTAL_COUNT, SET_CURRENT_PAGE } from './types';\n\nexport const fetchRepos = (currentPage, query) => dispatch => {\n    fetch(`https://api.github.com/search/repositories?q=${query}+in:repositories?page=${currentPage}&per_page=100`)\n    .then(res => res.json())\n    .then(data => dispatch({\n        type: FETCH_REPOS,   \n        payload: data,     \n    })).then(data => console.log(data));\n};\n\nexport const fetchQuery = query => {\n    return {\n        type: FETCH_QUERY,\n        payload: query\n    }\n};\n\nexport const storeDetail = () => dispatch => {\n    dispatch({\n        type: STORE_DETAIL,\n    })\n};\n\nexport const findUser = user => dispatch => {\n    fetch(`https://api.github.com/search/users?q=${user}`)\n    .then(res => res.json())\n    .then(data => dispatch({\n        type: FIND_USER,\n        payload: data.items,\n    })).then(data => console.log(data));\n};\n\nexport const setLoading = () => {\n    return {\n        type: LOADING\n    }\n};\n\nexport const updateTotalCount = totalCount => {\n    return {\n        type: UPDATE_TOTAL_COUNT,\n        payload: totalCount\n    }\n};\n\nexport const setCurrentPage = pageNumber => {\n    return {\n        type: SET_CURRENT_PAGE,\n        payload: pageNumber\n    }\n};\n","export const FETCH_REPOS = 'FETCH_REPOS';\nexport const FETCH_QUERY = 'FETCH_QUERY';\nexport const STORE_DETAIL = 'STORE_DETAIL';\nexport const FIND_USER = 'FIND_USER';\nexport const LOADING = 'LOADING';\nexport const UPDATE_TOTAL_COUNT = 'UPDATE_TOTAL_COUNT';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchQuery, fetchRepos, setLoading } from '../actions/reposActions';\nimport '../App.css';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { query: this.props.query, currentPage: this.props.currentPage};\n        this.timeout =  0;\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange(e) {\n        e.preventDefault();\n        this.props.fetchQuery(e.target.value);\n        this.props.setLoading();\n\n        //This allows the user to search without hitting submit.\n        let searchText = e.target.value;\n        let currentPage = this.props.currentPage;\n        if(this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n            this.props.fetchRepos(currentPage, searchText);\n        }, 600);\n    }\n    \n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.setLoading();\n        // only fetchRepos if a query is defined.\n        if(this.props.query !== 'undefined') {\n            this.props.fetchRepos(this.props.currentPage, this.props.query);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <form style={{ display: 'flex' }} onSubmit={this.handleSubmit}>\n                    <input \n                        type=\"text\" \n                        name=\"title\" \n                        placeholder=\"Search github repositories...\" \n                        style={{flex: '10', padding: '5px'}}\n                        value = {this.state.search}\n                        onChange = {this.handleChange}\n                        autoComplete=\"off\"\n                    />\n                    <input\n                        type=\"submit\"\n                        value=\"Search\"\n                        className=\"btn\"\n                        style={{flex: '1'}}\n                    />\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nSearchBar.protoTypes = {\n    fetchQuery: PropTypes.func.isRequired,\n    fetchRepos: PropTypes.func.isRequired,\n    setLoading: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    query: state.repos.query,\n    currentPage: state.repos.currentPage,\n});\n\nexport default connect(mapStateToProps, { fetchQuery, fetchRepos, setLoading })(SearchBar);\n","import React from 'react';\nimport spinner from '../gif/spinner.gif';\n\nfunction Spinner() {\n    return (\n        <div>\n            <img \n                src={spinner}\n                style={{ width: '200px', margin: 'auto', display: 'block' }}\n                alt=\"Loading...\"\n            />    \n        </div>\n    )\n}\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport landingPage from '../gif/landingPage.gif';\n\nexport class LandingPage extends Component {\n    render() {\n        return (\n            <div>\n                <h4 style={{margin: '4px',}}>\"The new Google!\" -Larry Page.</h4>\n                <h4 style={{margin: '4px',}}>\"New Rival!\" -Sergey Brin</h4>\n                <img \n                    src={landingPage}\n                    style={{ width: '40%', margin: 'auto', display: 'block' }}\n                    alt=\"Loading...\"\n                />      \n            </div>\n        )\n    }\n}\n\nexport default LandingPage\n","import React, { Component, Suspense } from 'react';\nimport Spinner from './Spinner';\nimport LandingPage from './LandingPage';\nimport Pagination from \"react-js-pagination\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchRepos, updateTotalCount, setCurrentPage } from '../actions/reposActions';\nimport '../App.css';\n\nconst Accounts = React.lazy(() => import('./Accounts'));\nconst ResultNotFound = React.lazy(() => import('./ResultNotFound'));\n\nexport class GithubRepo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            repos: this.props.repos,\n            totalCount: this.props.totalCount,\n            loading: this.props.loading,\n            totalPages: this.props.totalPages,\n            currentPage: this.props.currentPage,\n            activePage: this.props.activePage,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({repos: this.props.repos});\n        this.setState({totalCount: this.props.totalCount});\n        this.props.updateTotalCount(this.props.totalCount);\n    }\n\n    handlePageChange(pageNumber) {\n        // console.log(`active page is ${pageNumber}`);\n        this.setState({activePage: pageNumber});\n        this.setState({currentPage: pageNumber});\n        this.props.setCurrentPage(pageNumber);\n        this.props.fetchRepos(this.props.currentPage, this.props.query);\n      }\n\n    render() {\n        // console.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n        const {query, repos, loading, totalCount} = this.props;\n\n        let miliseconds = Math.round(performance.getEntries('measure')[0].duration);\n        let content = '';\n        //If loading is true, then content and header should not be visible.\n        content = repos.length > 0 && !loading ? repos.map((repos, index) => <Accounts key={index} repos={repos} />) : null;\n        const header = repos.length > 0 && !loading ? <thead><tr><th>Avatar</th><th>Name</th><th>Description</th><th>Created</th><th>Watchers</th><th>Private</th></tr></thead> : null;\n        const pagination = repos.length > 0 && !loading ? \n        <Pagination\n            activePage={this.state.activePage}\n            itemsCountPerPage={100}\n            totalItemsCount={totalCount}\n            pageRangeDisplayed={5}\n            onChange={this.handlePageChange.bind(this)}\n        /> : null;\n\n        return (\n            <div>\n                <Suspense fallback={<div>Loading, please wait...</div>}>\n                    {/* The h1 is only displayed once the user types */}\n                    { query ? <h1 style={{margin: '10px 0px 10px 0px',}}>Displaying Repositories with \"{query}\"</h1> : null}\n                    {/* The Spinner is only visible when loading is true */}\n                    {loading ? <Spinner /> : null}\n                    {content && !loading ? <span>Duration approximately {miliseconds}ms</span> : null}\n                    <table  className=\"Account\">\n                        {header}\n                        <tbody>\n                            {content}\n                        </tbody>\n                    </table>\n                    {pagination}\n                    {/* If no accounts are returned, but there has been a serach queried, then show no results found. */}\n                    {totalCount === 0 && !loading && query.length > 0 ? <ResultNotFound /> : null}\n                    {/* Just a little gif to get the party started */}\n                    {totalCount === 0 && !loading && query.length === 0 ? <LandingPage /> : null}\n                </Suspense>\n            </div>\n        )\n    }\n}\n\nGithubRepo.prototypes = {\n    fetchRepos: PropTypes.func.isRequired,\n    updateTotalCount: PropTypes.func.isRequired,\n    setCurrentPage: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    repos: state.repos.items,\n    query: state.repos.query,\n    totalCount: state.repos.totalCount,\n    loading: state.repos.loading,\n    totalPages: state.repos.totalPages,\n    currentPage: state.repos.currentPage,\n});\n\nexport default connect(mapStateToProps, { fetchRepos, updateTotalCount, setCurrentPage })(GithubRepo);\n","import React, { Component } from 'react';\nimport Spinner from './Spinner';\nimport { connect } from 'react-redux';\nimport { storeDetail, findUser } from '../actions/reposActions';\nimport PropTypes from 'prop-types';\nimport '../AccountDetail.css';\nimport { Link } from 'react-router-dom';\n\nclass AccountDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            user: [],\n            repos: this.props.repos,\n            userData: [],\n        };\n    }\n\n    componentDidMount() {\n        //I thought it would help to see some of the ideas I had.\n        // let user = this.props.match.params.id;\n        // this.props.findUser(user);\n        // this.props.storeDetail();\n        // this.setState({user: this.props.user[0]});\n\n        //User is available through params, allowing me to search for the user.\n        const params = this.props.match.params;\n\n        fetch(`https://api.github.com/users/${params.owner}`)\n            .then(res => res.json())\n            .then(data =>{\n                this.setState({userData: data});\n        });\n    }\n\n    render() {\n        const detail = this.state.userData;\n        function openTab() {\n            window.open(detail.html_url);\n        };\n\n        let content = [];\n        content = (\n            <React.Fragment>\n                <Link  to={\"/\"}><span>Back</span></Link>\n                <div className=\"card\">\n                    <img src={detail.avatar_url ? detail.avatar_url :  <Spinner />} alt=\"img\" style={{width:'100%'}} />\n                    <h4>Name: {detail.name ? detail.name : 'Not given'}</h4>\n                    <h4>Login: {detail.login ? detail.login : 'Not given'}</h4>\n                    <p>Bio: {detail.bio ? detail.bio : 'Not given'}</p>\n                    <p>Location: {detail.location ? detail.location : 'Not given'}</p>\n                    <p>Following: {detail.following}</p>\n                    <p>Followers: {detail.followers}</p>\n                    <Link to={\"\"} onClick={openTab}>\n                        <p><button>{detail.login ? detail.login + \"'s Github Account\" : 'View this Github Account'}</button></p>\n                    </Link>\n                </div>  \n            </React.Fragment>);\n\n        let detailView = this.state.userData ? content : null; \n\n        return (\n            <React.Fragment>\n                {detailView}\n            </React.Fragment>\n        )\n    }\n}\n\nAccountDetail.prototypes = {\n    storeDetail: PropTypes.func.isRequired,\n    findUser: PropTypes.func.isRequired,\n    user: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    user: state.repos.user,  \n    repos: state.repos.items,  \n});\n\nexport default connect(mapStateToProps, { storeDetail, findUser })(AccountDetail);\n","import { FETCH_REPOS, FETCH_QUERY, STORE_DETAIL, FIND_USER, LOADING, UPDATE_TOTAL_COUNT, SET_CURRENT_PAGE } from '../actions/types';\n\nconst initialState = {\n    query: '',\n    user:[],\n    items: [],\n    loading: false,\n    totalCount: 0,\n    totalPages: 0,\n    currentPage: 1,   \n}\n\nexport default function (state = initialState, action) {\n    switch(action.type) {\n        case FETCH_REPOS:\n            return {\n                ...state,\n                items: action.payload.items || [],\n                query: state.query,\n                loading: false,\n                totalCount: action.payload.total_count,\n            };\n        case FETCH_QUERY:\n            return {\n                ...state,\n                query: action.payload\n            };\n        case STORE_DETAIL:\n            return {\n                ...state,\n                user: action.payload\n            };\n        case FIND_USER:\n            return {\n                ...state,\n                user: action.payload,\n                loading: false,\n            };\n        case LOADING:\n            return {\n                ...state,\n                loading: true,\n            };\n        case UPDATE_TOTAL_COUNT:\n            return {\n                ...state,\n                totalCount: action.payload,\n            };\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport reposReducer from './reposReducer';\n\nexport default combineReducers({\n    repos: reposReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        // window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()\n        // The above line had to be commented out in order to use dev tools without issues on tablet/phone\n        window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : f => f\n    )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport SearchBar from './components/SearchBar';\nimport GithubRepo from './components/GithubRepo';\nimport AccountDetail from './components/AccountDetail';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport {HashRouter as Router, Route} from 'react-router-dom';\n\nimport store from './store';\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <h1>Explore Github Repositories</h1>\n            <Route exact path=\"/\" component={SearchBar} />\n            <Route exact path=\"/\" component={GithubRepo} />\n            <Route exact path=\"/repo/:owner/:repo\" component={AccountDetail} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}